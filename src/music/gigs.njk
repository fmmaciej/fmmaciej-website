---
title: FM — /music/gigs
layout: layout.njk
terminalFile: /assets/terminal/music/gigs.json
permalink: /music/gigs/index.html
---

<h3 id="gigsBreadcrumb"><a href="/music/">/music</a><a href="/music/gigs/">/gigs</a><span id="yearSuffix"></span></h3>

<p>
A collection of posters and flyers from events I’ve been part of.
Sorted by year, they show where and when the music happened.
</p>

{# --- zgrupowane dane z _data/gigData.js (korzysta z gigEvents.js) --- #}
{% set groups = gigData.groups | default([]) %}

{# --- render --- #}
{% for g in groups %}
<section class="year-section" id="y-{{ g.year }}" data-year="{{ g.year }}">
<details class="year-details" data-year="{{ g.year }}">

    <summary class="year-header">
        {{ g.year }}
        <span class="year-badge" 
            title="{{ g.photoCount }} photo{% if g.photoCount != 1 %}s{% endif %} total">
            {{ g.count }}
        </span>
    </summary>

    <div class="gig-grid">
    {% for ev in g.items %}
        {% set eager = loop.index0 < 6 %}
        <a class="gig-card" href="/music/gigs/{{ ev.year }}/{{ ev.key }}/" aria-label="{{ ev.cover.alt }}">
            <img
                src="{{ ev.cover.thumb480 }}"
                srcset="{{ ev.cover.thumb480 }} 480w, {{ ev.cover.thumb960 }} 960w"
                sizes="(max-width: 600px) 100vw, (max-width: 1200px) 33vw, 25vw"
                alt="{{ ev.cover.alt }}"
                width="{{ ev.cover.w }}"
                height="{{ ev.cover.h }}"
                {% if eager %}loading="eager" fetchpriority="high"{% else %}loading="lazy" fetchpriority="low"{% endif %}
                decoding="async">
            <div class="gig-meta">
                <div class="gig-date">{{ ev.date }}</div>
                <div class="gig-name">{% if ev.name %}{{ ev.name }}{% else %}&nbsp;{% endif %}</div>
                <div class="gig-count">{{ ev.count }} photo{% if ev.count > 1 %}s{% endif %}</div>
            </div>
        </a>
    {% endfor %}
    </div>

</details>
</section>
{% endfor %}

<br>

<script>
(function(){
    const suffix  = document.getElementById('yearSuffix');
    const details = Array.from(document.querySelectorAll('.year-details'));

    const fmt = (year) => year ? `<a href="/music/gigs#y-${year}">/${year}</a>` : '';
    const setCrumb = (year) => {
        suffix.innerHTML = year ? fmt(year) : '';
        try {
            if (year) history.replaceState(null, '', '#y-' + year);
            else history.replaceState(null, '', location.pathname);
        } catch (_) {}
    };

    function topmostOpenYear(){
        const open = details.filter(d => d.open);
        if (!open.length) return null;
        open.sort((a,b) => Math.abs(a.getBoundingClientRect().top) - Math.abs(b.getBoundingClientRect().top));

        return open[0].dataset.year || null;
    }

    // Klik: rozwijanie/zamykanie -> aktualizuj breadcrumb
    details.forEach(d => {
        d.addEventListener('toggle', () => {
            const y = d.open ? d.dataset.year : topmostOpenYear();
            setCrumb(y);
        });
    });

    // Start: /music/gigs (nic otwartego)
    setCrumb(null);

    // Hash #y-YYYY -> otwórz dany rok
    const m = (location.hash || '').match(/^#y-(\d{4})$/);
    if (m) {
        const target = document.querySelector(`.year-details[data-year="${m[1]}"]`);
        if (target && !target.open) {
            target.open = true;
            setCrumb(m[1]);
            const sec = document.getElementById('y-' + m[1]);
            if (sec) sec.scrollIntoView({ behavior: 'instant', block: 'start' });
        }
    }
})();
</script>
